*Задание 1. *Представьте, что вы работаете над разработкой простого приложения для записной книжки, которое позволяет пользователям добавлять, редактировать и удалять контакты.
Ваша задача - придумать как можно больше различных тестов (юнит-тесты, интеграционные тесты, сквозные тесты) для этого приложения. Напишите название каждого теста, его тип и
краткое описание того, что этот тест проверяет.

1. Юнит-тесты:
- `testAddContact` - проверяет, что новый добавленный контакт успешно сохраняется в записной книжке.
- `testEditContact`  - проверяет, что при редактировании существующего контакта его данные успешно изменяются.
- `testDeleteContact` - проверяет, что при удалении существующего контакта он успешно удаляется из записной книжки.
- `testGetAllContacts`  - проверяет, что список всех контактов в записной книжке возвращается корректно.

2. Интеграционные тесты:
- `testAddEditDeleteContact - проверяет, что можно успешно добавлять, редактировать и удалять контакты в записной книжке в рамках одной сессии работы с приложением.
- `testGetAllContacts` - проверяет, что список всех контактов в записной книжке возвращается корректно после добавления нескольких контактов.
- `testSearchContacts` - проверяет, что поиск контактов в записной книжке возвращает правильные результаты.

3. Сквозные (end-to-end) тесты:
- `testAddEditDeleteContact` - проверяет, что можно успешно добавлять, редактировать и удалять контакты в записной книжке через пользовательский интерфейс приложения.
- `testGetAllContacts` - проверяет, что список всех контактов в записной книжке отображается корректно на пользовательском интерфейсе.
- `testSearchContacts` - проверяет, что поиск контактов в записной книжке через пользовательский интерфейс возвращает правильные результаты.

*Задание 2. *Ниже список тестовых сценариев. Ваша задача - определить тип каждого теста (юнит-тест, интеграционный тест, сквозной тест) и объяснить, почему вы так решили.

1.	Проверка того, что функция addContact корректно добавляет новый контакт в список контактов"".
unit-test, т.к. идет проверка конкретной функциональности метода.

2.  Проверка того, что при добавлении контакта через пользовательский интерфейс, контакт корректно отображается в списке контактов"".
Интеграционный тест, т.к. проверяется взаимодействие систем добавления и отображения контакта.

3.  Проверка полного цикла работы с контактом: создание контакта, его редактирование и последующее удаление"".
Сквозной тест, т.к. реализована сквозная проверка всех этапов работы с контактом и корректности исполнения этих этапов.
