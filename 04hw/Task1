Задание 1. Ответьте письменно на вопросы:

1)  Почему использование тестовых заглушек может быть полезным при написании модульных тестов?
Использование тестовых заглушек позволяет повысить скорость тестирования, экономит оперативную память, 
делает сам тест более гибким и позволяет протестировать функционал на любом уровне без оглядки на внешнюю среду.

2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными аргументами?

MOCK. Например: verify(myObject).myMethod("expectedArgument")

3) Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода?

Для возврата определенного значения или исключения в ответ на вызов метода можно использовать тестовую заглушку 
типа MOCK, метод "assert". Она позволяет проверить, что ожидаемое значение или условие выполнено, и продолжить выполнение кода, 
если это так. Если же ожидаемое значение не выполнено, то будет выброшено исключение, которое можно обработать в 
блоке try-except.

4) Какой тип тестовой заглушки вы бы использовали для имитации  взаимодействия с внешним API или базой данных?

Тип mock. Эти заглушки позволяют заменить воздействие окружения на имитацию, которую можно контролировать и менять по своему усмотрению. 
Это позволяет сделать тест гибким и ускорить процесс разработки.

